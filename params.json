{"name":"ghostframe-api","tagline":"The API that powers ghostframe","body":"# ghostframe API\r\n\r\n## Important Information\r\n\r\n- The base URL for the API is ```http://v1.api.ghostfra.me/```\r\n- All API calls must have the API key passed through with a key called '```key```'.\r\n\r\n## API Specification\r\n\r\n### Endpoint: ```/post/new```\r\n#### Description: Add a new post\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```user_id```|String|Unique ID of the user device|\r\n|```caption```|String|Caption of the photo|\r\n|```latitude```|String|Current latitude of the user|\r\n|```longitude```|String|Current longitude of the user|\r\n|```alias```|String|Alias of the user (this is optional)|\r\n|```photo```|String|Base64 sequence of the encoded photo|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. Post added|\r\n|400|Bad request. Check headers|\r\n|500|Database error. See server logs|\r\n\r\n### Endpoint: ```/post/view```\r\n#### Description: View posts (returns most recent 20 from the time requested)\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```latitude```|String|Current latitude of the user|\r\n|```longitude```|String|Current longitude of the user|\r\n|```last_post_time```|Number|Number of milliseconds since 1970/01/01 (equivalent of ```new Date().getTime()```) to the posted time of the last post in the feed|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. Posts returned|\r\n|400|Bad request. Check headers|\r\n|500|Database error. See server logs|\r\n\r\n### Endpoint: ```/post/upvote```\r\n#### Description: Append the number of upvotes for a post by 1\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```photo```|String|ID of the photo for which the upvote should be appended|\r\n|```latitude```|String|Current latitude of the user|\r\n|```longitude```|String|Current longitude of the user|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. Upvote appended|\r\n|400|Bad request. Check headers|\r\n|500|Databse error. See server logs|\r\n\r\n### Endpoint: ```/post/downvote```\r\n#### Description: Append the number of downvotes for a post by 1\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```photo```|String|ID of the photo for which the downvote should be appended|\r\n|```latitude```|String|Current latitude of the user|\r\n|```longitude```|String|Current longitude of the user|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. Downvote appended|\r\n|400|Bad request. Check headers|\r\n|500|Databse error. See server logs|\r\n\r\n### Endpoint: ```/post/comment```\r\n#### Description: Add a new comment\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```user_id```|String|Unique ID of the user device|\r\n|```photo```|String|ID of the photo to which the comment should be appended|\r\n|```latitude```|String|Current latitude of the user|\r\n|```longitude```|String|Current longitude of the user|\r\n|```content```|String|Content of the comment|\r\n|```alias```|String|Alias of the user (optional)|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. Comment added|\r\n|400|Bad request. Check headers|\r\n|500|Database error. See server logs|\r\n\r\n### Endpoint: ```/post/detailed```\r\n#### Description: Get detailed view of a post\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```photo```|String|ID of the photo for which the detailed view is to be displayed|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. Detailed view returned|\r\n|400|Bad request. Check request headers|\r\n|500|Database error. See server logs|\r\n\r\n### Endpoint: ```/post/hot```\r\n#### Description: Get list of 'hot' (i.e. most popular) posts\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```latitude```|String|Current latitude of the user|\r\n|```longitude```|String|Current longitude of the user|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. List of hot posts returned|\r\n|400|Bad request. Check request headers|\r\n|500|Databse error. See server logs|\r\n\r\n### Endpoint: ```/post/comment/upvote```\r\n#### Description: Append comment upvote by 1\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```photo```|String|Unique ID of the photo|\r\n|```comment_id```|String|Unique ID of the comment|\r\n|```latitude```|String|Current latitude of the user|\r\n|```longitude```|String|Current longitude of the user|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. Comment upvote appended|\r\n|400|Bad request. Check request headers|\r\n|500|Databse error. See server logs|\r\n\r\n### Endpoint: ```/post/comment/downvote```\r\n#### Description: Append comment downvote by 1\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```photo```|String|Unique ID of the photo|\r\n|```comment_id```|String|Unique ID of the comment|\r\n|```latitude```|String|Current latitude of the user|\r\n|```longitude```|String|Current longitude of the user|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. Comment downvote appended|\r\n|400|Bad request. Check request headers|\r\n|500|Databse error. See server logs|\r\n\r\n### Endpoint: ```/post/user```\r\n#### Description: Get all posts by a specific user ID\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```user_id```|String|Unique ID of the user device|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. List of posts by user returned|\r\n|400|Bad request. Check request headers|\r\n|500|Database error. See server logs|\r\n\r\n### Endpoint: ```/post/comment/user```\r\n#### Description: Get all comments (and parent posts) by a specific user ID\r\n#### Method: ```POST```\r\n#### Parameters:\r\n|*Name*|*Type*|*Description*|\r\n|:----:|:----:|:------------|\r\n|```user_id```|String|Unique ID of the user device|\r\n#### Response Codes:\r\n|*Code*|*Description*|\r\n|:----:|:------------|\r\n|200|All OK. List of posts containing specific user comments returned|\r\n|400|Bad request. Check request headers|\r\n|500|Database error. See server logs|","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}